{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, NgModule, Injectable } from '@angular/core';\nimport { HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i1 from '@angular/router';\n\nclass ButtonComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n  return new (t || ButtonComponent)();\n};\n\nButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ButtonComponent,\n  selectors: [[\"lib-button\"]],\n  decls: 4,\n  vars: 0,\n  template: function ButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"button works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\");\n      i0.ɵɵtext(3, \"Button\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-button',\n      templateUrl: './button.component.html',\n      styleUrls: ['./button.component.css']\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass CoreModule {\n  constructor() {}\n\n}\n\nCoreModule.ɵfac = function CoreModule_Factory(t) {\n  return new (t || CoreModule)();\n};\n\nCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: CoreModule\n});\nCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CoreModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ButtonComponent],\n      imports: [],\n      exports: [ButtonComponent]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass AuthorizationObserver {\n  constructor() {\n    this.addToken = false;\n  }\n\n}\n\nAuthorizationObserver.ɵfac = function AuthorizationObserver_Factory(t) {\n  return new (t || AuthorizationObserver)();\n};\n\nAuthorizationObserver.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AuthorizationObserver,\n  factory: AuthorizationObserver.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthorizationObserver, [{\n    type: Injectable\n  }], null, null);\n})();\n\nclass DecoratorService {\n  constructor(authorizationObserver) {\n    DecoratorService.authorizationObserver = authorizationObserver;\n  }\n\n  static getAuthorizationObserver() {\n    return DecoratorService.authorizationObserver;\n  }\n\n}\n\nDecoratorService.ɵfac = function DecoratorService_Factory(t) {\n  return new (t || DecoratorService)(i0.ɵɵinject(AuthorizationObserver));\n};\n\nDecoratorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DecoratorService,\n  factory: DecoratorService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DecoratorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: AuthorizationObserver\n    }];\n  }, null);\n})();\n\nclass HttpInterceptorAuth {\n  intercept(req, next) {\n    const autorizationObserver = DecoratorService.getAuthorizationObserver();\n\n    if (autorizationObserver.addToken) {\n      const user = JSON.parse(localStorage.getItem('user') || '');\n\n      if (user.token) {\n        const modified = req.clone({\n          setHeaders: {\n            'Authorization': `${user.type} ${user.token}`\n          }\n        });\n        autorizationObserver.addToken = false;\n        return next.handle(modified);\n      }\n    }\n\n    return next.handle(req);\n  }\n\n}\n\nHttpInterceptorAuth.ɵfac = function HttpInterceptorAuth_Factory(t) {\n  return new (t || HttpInterceptorAuth)();\n};\n\nHttpInterceptorAuth.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: HttpInterceptorAuth,\n  factory: HttpInterceptorAuth.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HttpInterceptorAuth, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass AuthDenied {\n  constructor(router) {\n    this.router = router;\n  }\n\n  intercept(request, next) {\n    return next.handle(request).pipe(tap(() => {}, err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status !== 403) {\n          return;\n        }\n\n        this.router.navigate(['login']);\n      }\n    }));\n  }\n\n}\n\nAuthDenied.ɵfac = function AuthDenied_Factory(t) {\n  return new (t || AuthDenied)(i0.ɵɵinject(i1.Router));\n};\n\nAuthDenied.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AuthDenied,\n  factory: AuthDenied.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthDenied, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Router\n    }];\n  }, null);\n})();\n\nclass InterceptorUnauthorized {\n  constructor(router) {\n    this.router = router;\n  }\n\n  intercept(request, next) {\n    return next.handle(request).pipe(tap(() => {}, err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status !== 401) {\n          return;\n        }\n\n        this.router.navigate(['login']);\n      }\n    }));\n  }\n\n}\n\nInterceptorUnauthorized.ɵfac = function InterceptorUnauthorized_Factory(t) {\n  return new (t || InterceptorUnauthorized)(i0.ɵɵinject(i1.Router));\n};\n\nInterceptorUnauthorized.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InterceptorUnauthorized,\n  factory: InterceptorUnauthorized.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InterceptorUnauthorized, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Router\n    }];\n  }, null);\n})();\n\nclass InterceptorError {\n  constructor(router) {\n    this.router = router;\n  }\n\n  intercept(request, next) {\n    return next.handle(request).pipe(tap(() => {}, err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status !== 500) {\n          return;\n        }\n\n        this.router.navigate(['error']);\n      }\n    }));\n  }\n\n}\n\nInterceptorError.ɵfac = function InterceptorError_Factory(t) {\n  return new (t || InterceptorError)(i0.ɵɵinject(i1.Router));\n};\n\nInterceptorError.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InterceptorError,\n  factory: InterceptorError.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InterceptorError, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Router\n    }];\n  }, null);\n})();\n\nclass InterceptorNotFound {\n  constructor(router) {\n    this.router = router;\n  }\n\n  intercept(request, next) {\n    return next.handle(request).pipe(tap(() => {}, err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status !== 404) {\n          return;\n        }\n\n        this.router.navigate(['notfound']);\n      }\n    }));\n  }\n\n}\n\nInterceptorNotFound.ɵfac = function InterceptorNotFound_Factory(t) {\n  return new (t || InterceptorNotFound)(i0.ɵɵinject(i1.Router));\n};\n\nInterceptorNotFound.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: InterceptorNotFound,\n  factory: InterceptorNotFound.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InterceptorNotFound, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.Router\n    }];\n  }, null);\n})();\n\nconst INTERCEPTORS = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: HttpInterceptorAuth,\n  multi: true\n}, {\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthDenied,\n  multi: true\n}, {\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorUnauthorized,\n  multi: true\n}, {\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorError,\n  multi: true\n}, {\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorNotFound,\n  multi: true\n}];\n\nfunction decorateClass(target) {\n  const methods = Object.getOwnPropertyNames(target.prototype).filter(prop => prop != \"constructor\");\n\n  for (let method of methods) {\n    const fn = target.prototype[method];\n\n    target.prototype[method] = function (...args) {\n      const authozitationObserver = DecoratorService.getAuthorizationObserver();\n      authozitationObserver.addToken = true;\n      const observer = fn.apply(this, args);\n      return observer;\n    };\n  }\n}\n\nfunction decorateMethod(target, propertyKey, descriptor) {\n  const fn = descriptor.value;\n\n  descriptor.value = function (...args) {\n    const authozitationObserver = DecoratorService.getAuthorizationObserver();\n    authozitationObserver.addToken = true;\n    const observer = fn.apply(this, args);\n    return observer;\n  };\n}\n\nfunction Authorize() {\n  return (target, propertyKey, descriptor) => {\n    propertyKey ? decorateMethod(target, propertyKey, descriptor) : decorateClass(target);\n  };\n}\n\nconst URL = 'http://localhost:9999';\n/*\r\n * Public API Surface of core\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AuthorizationObserver, Authorize, ButtonComponent, CoreModule, DecoratorService, INTERCEPTORS, URL };","map":{"version":3,"sources":["C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\button\\button.component.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\button\\button.component.html","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\core.module.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\services\\authorizationObserver.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\interceptor\\decoratorService.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\interceptor\\interceptorAuth.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\interceptor\\interceptorDenied.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\interceptor\\interceptorUnauthorized.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\interceptor\\interceptorError.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\interceptor\\interceptorNotFound.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\interceptor\\index.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\services\\authorize.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\lib\\config\\config.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\projects\\core\\src\\public-api.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.css']\r\n})\r\nexport class ButtonComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>button works!</p>\r\n<button>Button</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { ButtonComponent } from './button/button.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ButtonComponent\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    ButtonComponent\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(){}\r\n }\r\n","import { Injectable } from \"@angular/core\";\r\n@Injectable()\r\nexport class AuthorizationObserver{\r\n    addToken:Boolean= false;    \r\n}","import { Injectable } from \"@angular/core\";\r\nimport {AuthorizationObserver} from '../services/authorizationObserver'\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DecoratorService {\r\n    \r\n     private static authorizationObserver:AuthorizationObserver ;\r\n     public constructor(authorizationObserver:AuthorizationObserver) {\r\n         DecoratorService.authorizationObserver = authorizationObserver         \r\n     }\r\n     public static getAuthorizationObserver(): AuthorizationObserver {         \r\n         return DecoratorService.authorizationObserver\r\n     }     \r\n}","import { HttpEvent, HttpHandler, HttpHeaders, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\n\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport { DecoratorService } from \"./decoratorService\";\r\nimport  {UserDto} from '../user/userDto'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HttpInterceptorAuth implements HttpInterceptor {    \r\n   \r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        const autorizationObserver = DecoratorService.getAuthorizationObserver();\r\n        if (autorizationObserver.addToken) {\r\n            const user: UserDto = JSON.parse(localStorage.getItem('user')|| '') as UserDto; \r\n           \r\n            if(user.token){\r\n                const modified = req.clone({ setHeaders: { 'Authorization': `${user.type} ${user.token}` }});\r\n                autorizationObserver.addToken = false;\r\n                return next.handle(modified);          \r\n            }\r\n              \r\n        }\r\n        return next.handle(req);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthDenied implements HttpInterceptor {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe( tap(() => {},\r\n      (err: any) => {\r\n      if (err instanceof HttpErrorResponse) {\r\n        if (err.status !== 403) {\r\n         return;\r\n        }\r\n        this.router.navigate(['login']);\r\n      }\r\n    }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class InterceptorUnauthorized implements HttpInterceptor {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe( tap(() => {},\r\n      (err: any) => {\r\n      if (err instanceof HttpErrorResponse) {\r\n        if (err.status !== 401) {\r\n         return;\r\n        }\r\n        this.router.navigate(['login']);\r\n      }\r\n    }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class InterceptorError implements HttpInterceptor {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe( tap(() => {},\r\n      (err: any) => {\r\n      if (err instanceof HttpErrorResponse) {\r\n        if (err.status !== 500) {\r\n         return;\r\n        }\r\n        this.router.navigate(['error']);\r\n      }\r\n    }));\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {tap} from 'rxjs/operators';\r\nimport {Router} from '@angular/router';\r\n\r\n@Injectable()\r\nexport class InterceptorNotFound implements HttpInterceptor {\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe( tap(() => {},\r\n      (err: any) => {\r\n      if (err instanceof HttpErrorResponse) {\r\n        if (err.status !== 404) {\r\n         return;\r\n        }\r\n        this.router.navigate(['notfound']);\r\n      }\r\n    }));\r\n  }\r\n}","import { HTTP_INTERCEPTORS } from '@angular/common/http'\r\nimport { HttpInterceptorAuth } from './interceptorAuth'\r\nimport {AuthDenied} from './interceptorDenied'\r\nimport {InterceptorUnauthorized} from './interceptorUnauthorized'\r\nimport {InterceptorError} from './interceptorError'\r\nimport {InterceptorNotFound} from './interceptorNotFound'\r\nexport const INTERCEPTORS =[\r\n    {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: HttpInterceptorAuth,\r\n        multi: true\r\n      },\r\n      {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: AuthDenied,\r\n        multi: true\r\n      },\r\n      {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: InterceptorUnauthorized,\r\n        multi: true\r\n      },\r\n      {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: InterceptorError,\r\n        multi: true\r\n      },   \r\n      {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: InterceptorNotFound,\r\n        multi: true\r\n      },\r\n]","import { DecoratorService } from '../interceptor/decoratorService'\r\nfunction decorateClass(target: Function) {\r\n    const methods = Object.getOwnPropertyNames(target.prototype)\r\n        .filter(prop => prop != \"constructor\");\r\n    for (let method of methods) {\r\n        const fn = target.prototype[method];\r\n        target.prototype[method] = function (...args: []) {\r\n            const authozitationObserver = DecoratorService.getAuthorizationObserver();\r\n            authozitationObserver.addToken = true;               \r\n            const observer = fn.apply(this, args)                          \r\n            return observer\r\n        }\r\n    }\r\n}\r\nfunction decorateMethod(target: Function, propertyKey: string, descriptor: PropertyDescriptor) {\r\n    const fn = descriptor.value;\r\n    descriptor.value = function (...args: []) {\r\n        const authozitationObserver = DecoratorService.getAuthorizationObserver();\r\n        authozitationObserver.addToken = true;               \r\n        const observer = fn.apply(this, args)            \r\n        return observer\r\n    }\r\n}\r\n\r\nexport function Authorize(): any {\r\n    return (target: Function, propertyKey: string, descriptor: PropertyDescriptor) => {\r\n        propertyKey ? decorateMethod(target, propertyKey, descriptor) : decorateClass(target)\r\n    }\r\n}","export const URL= 'http://localhost:9999';","/*\r\n * Public API Surface of core\r\n */\r\n\r\nexport * from './lib/core.module';\r\nexport * from './lib/interceptor/index';\r\nexport * from './lib/services/authorize';\r\nexport * from './lib/button/button.component';\r\nexport * from './lib/services/authorizationObserver';\r\nexport * from './lib/interceptor/decoratorService';\r\nexport * from './lib/config/config';"]},"metadata":{},"sourceType":"module"}