{"ast":null,"code":"import { isLoading$ } from 'projects/core/src/lib/services/loading.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"projects/core/src/lib/services/loading.service\";\nimport * as i2 from \"projects/core/src/lib/services/ingredientService\";\n\nfunction AppComponent_cap_spinner_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"cap-spinner\");\n  }\n}\n\nexport class AppComponent {\n  constructor(loader, ingredientService) {\n    this.loader = loader;\n    this.loading$ = isLoading$;\n    this.title = 'PizzeriaFrontEnd';\n    this.condition = false;\n  }\n\n  triggerLoadingIndicator() {\n    this.ingredientService.get(\"1\").subscribe({\n      error: () => console.log(\"error component\"),\n      complete: () => console.log(\"complete component\")\n    });\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.LoadingService), i0.ɵɵdirectiveInject(i2.IngredientService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[4, \"ngIf\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Buenos d\\u00EDas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, AppComponent_cap_spinner_2_Template, 1, 0, \"cap-spinner\", 0);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementStart(4, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_4_listener() {\n        return ctx.condition = true;\n      });\n      i0.ɵɵtext(5, \"Encender Spinner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"lib-button\");\n      i0.ɵɵelement(7, \"router-outlet\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(3, 1, ctx.loading$));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\src\\app\\app.component.ts","C:\\Users\\mturpinb\\Desktop\\JavaScript\\Angular\\PizzeriaFrontEnd\\src\\app\\app.component.html"],"names":[],"mappings":"AAEA,SAAS,UAAT,QAA2B,gDAA3B;;;;;;;ACDA,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,aAAA;;;;ADUA,OAAM,MAAO,YAAP,CAAmB;AAKvB,EAAA,WAAA,CAAoB,MAApB,EAA4C,iBAA5C,EAAgF;AAA5D,SAAA,MAAA,GAAA,MAAA;AAJpB,SAAA,QAAA,GAAW,UAAX;AACA,SAAA,KAAA,GAAQ,kBAAR;AACA,SAAA,SAAA,GAAY,KAAZ;AAIC;;AACD,EAAA,uBAAuB,GAAA;AACrB,SAAK,iBAAL,CAAuB,GAAvB,CAA2B,GAA3B,EAAgC,SAAhC,CAA0C;AACxC,MAAA,KAAK,EAAC,MAAI,OAAO,CAAC,GAAR,CAAY,iBAAZ,CAD8B;AAExC,MAAA,QAAQ,EAAC,MAAI,OAAO,CAAC,GAAR,CAAY,oBAAZ;AAF2B,KAA1C;AAID;;AAbsB;;;mBAAZ,Y,EAAY,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,iBAAA,C;AAAA,C;;;QAAZ,Y;AAAY,EAAA,SAAA,EAAA,CAAA,CAAA,UAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,qBAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACXzB,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA;AAAI,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,kBAAA;AAAW,MAAA,EAAA,CAAA,YAAA;AACf,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,mCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,aAAA,EAAA,CAAA;;AACA,MAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,QAAA,EAAA,CAAA;AAAQ,MAAA,EAAA,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,6CAAA,GAAA;AAAA,eAAA,GAAA,CAAA,SAAA,GAAmB,IAAnB;AAAuB,OAAvB;AAAyB,MAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,kBAAA;AAAgB,MAAA,EAAA,CAAA,YAAA;AACjD,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,YAAA;AACA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,eAAA;;;;AAHc,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,QAAA,CAAA","sourcesContent":["import { Component } from '@angular/core';\r\nimport { IngredientService } from 'projects/core/src/lib/services/ingredientService';\r\nimport { isLoading$ } from 'projects/core/src/lib/services/loading.service';\r\n\r\nimport { LoadingService } from 'projects/core/src/lib/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  loading$ = isLoading$;\r\n  title = 'PizzeriaFrontEnd';\r\n  condition = false;\r\n\r\n  constructor (public loader: LoadingService, ingredientService: IngredientService){\r\n\r\n  }\r\n  triggerLoadingIndicator() {\r\n    this.ingredientService.get(\"1\").subscribe({\r\n      error:()=>console.log(\"error component\"),\r\n      complete:()=>console.log(\"complete component\")\r\n    })\r\n  }\r\n}\r\n","<h1>Buenos días</h1>\r\n<cap-spinner *ngIf=\"loading$ | async\"></cap-spinner>\r\n<button (click)=\"condition=true\">Encender Spinner</button>\r\n<lib-button></lib-button>\r\n<router-outlet></router-outlet>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}